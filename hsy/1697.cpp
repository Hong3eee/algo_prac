#include<iostream>#include<queue>using namespace std;bool check[100001] = { false, };struct pos {	int p;	int t;	pos(int _p = 0, int _t = 0) : p(_p), t(_t) {}};int main(void){	int N, K;	int temp_p;	queue<pos> q;	pos temp;		cin >> N >> K;		if (N == K)	{		cout << "0" << endl;		return 0;	}	q.push(pos(N, 0));	check[N] = true;		while (!q.empty())	{		temp = q.front();		q.pop();					if (temp.p - 1 >= 0 && !check[temp.p-1])		{			temp_p = temp.p - 1;			if (temp_p == K)				break;			q.push(pos(temp_p, temp.t + 1));			check[temp_p] = true;		}				if (temp.p + 1 <= 100000 && !check[temp.p + 1])		{			temp_p = temp.p + 1;			if (temp_p == K)				break;			q.push(pos(temp_p, temp.t + 1));			check[temp_p] = true;		}		if (temp.p * 2 <= 100000 && !check[temp.p * 2])		{			temp_p = temp.p * 2;			if (temp_p == K)				break;			q.push(pos(temp_p, temp.t + 1));			check[temp_p] = true;		}	}	cout << temp.t + 1 << endl;}